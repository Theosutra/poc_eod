#!/usr/bin/env python3
"""
Script pour vectorisation rapide SANS OCR
Test uniquement le chunking + enrichissement + embeddings
"""

import os
import sys
import logging
from pathlib import Path
from dotenv import load_dotenv

# Ajouter le dossier src au path
sys.path.append('src')

from simplified_embedding_manager import SimplifiedEmbeddingManager

# Configuration logging simple
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def vectorize_test_documents():
    """Test de vectorisation sur des documents simul√©s"""
    
    print("üöÄ Vectorisation rapide SANS OCR")
    print("=" * 50)
    
    # Charger les variables d'environnement
    load_dotenv()
    api_key = os.getenv("GEMINI_API_KEY")
    
    if not api_key:
        print("‚ùå GEMINI_API_KEY manquant dans .env")
        return False
    
    try:
        # Cr√©er le gestionnaire simplifi√©
        print("üß† Initialisation du gestionnaire d'embeddings...")
        manager = SimplifiedEmbeddingManager(api_key)
        
        # Documents de test (simul√©s)
        test_documents = {
            "business_plan_techcorp.pdf": """
            ## Pr√©sentation de TechCorp
            
            TechCorp est une startup fran√ßaise sp√©cialis√©e dans l'IoT industriel.
            L'entreprise a √©t√© fond√©e en 2020 par Jean Dupont et Marie Martin.
            Elle d√©veloppe des solutions connect√©es pour l'industrie 4.0.
            
            ## Chiffres Cl√©s 2023
            
            Chiffre d'affaires: 2.1M‚Ç¨ (+45% vs 2022)
            EBITDA: 18%
            Effectifs: 15 personnes
            Clients: 25 entreprises industrielles
            
            ## √âquipe de Direction
            
            Jean Dupont, CEO: 10 ans d'exp√©rience en IoT, ancien directeur technique chez Schneider Electric
            Marie Martin, CTO: Experte en syst√®mes embarqu√©s, dipl√¥m√©e Centrale Paris
            
            ## March√© et Concurrence
            
            Le march√© de l'IoT industriel repr√©sente 45M‚Ç¨ en France avec une croissance de 15% par an.
            Les principaux concurrents sont Sigfox, Orange Business et des startups comme Objenious.
            
            ## Strat√©gie de D√©veloppement
            
            L'entreprise vise 5M‚Ç¨ de CA en 2025 gr√¢ce √†:
            - Expansion internationale (Allemagne, Italie)
            - Nouveaux produits (capteurs environnementaux)
            - Partenariats industriels strat√©giques
            """,
            
            "presentation_investissement.pptx": """
            --- Slide 1 ---
            TechCorp - Opportunit√© d'Investissement
            S√©rie A - 3M‚Ç¨
            
            --- Slide 2 ---
            Probl√®me Adress√©
            ‚Ä¢ 70% des usines manquent de donn√©es temps r√©el
            ‚Ä¢ Maintenance curative co√ªteuse
            ‚Ä¢ Gaspillage √©nerg√©tique important
            
            --- Slide 3 ---
            Notre Solution
            ‚Ä¢ Capteurs IoT plug-and-play
            ‚Ä¢ Plateforme analytics cloud
            ‚Ä¢ ROI prouv√© de 6 mois
            
            --- Slide 4 ---
            Traction Commerciale
            ‚Ä¢ 25 clients actifs
            ‚Ä¢ 2.1M‚Ç¨ de CA en 2023
            ‚Ä¢ Croissance +45% YoY
            ‚Ä¢ NPS Score: 8.5/10
            
            --- Slide 5 ---
            Utilisation des Fonds
            ‚Ä¢ R&D (40%): Nouveaux capteurs
            ‚Ä¢ Sales & Marketing (35%): Expansion
            ‚Ä¢ Recrutement (25%): 10 personnes
            """,
            
            "analyse_financiere_2023.xlsx": """
            --- Feuille: Compte de R√©sultat ---
            Exercice 2023 | Exercice 2022 | √âvolution
            CA | 2,100,000‚Ç¨ | 1,450,000‚Ç¨ | +45%
            Charges | 1,722,000‚Ç¨ | 1,276,000‚Ç¨ | +35%
            EBITDA | 378,000‚Ç¨ | 174,000‚Ç¨ | +117%
            R√©sultat Net | 252,000‚Ç¨ | 87,000‚Ç¨ | +190%
            
            --- Feuille: M√©triques Cl√©s ---
            Marge EBITDA | 18% | 12% | +6pts
            Marge Nette | 12% | 6% | +6pts
            CA par employ√© | 140,000‚Ç¨ | 121,000‚Ç¨ | +16%
            Croissance MRR | 8% | 5% | +3pts
            
            --- Feuille: Projections 2024 ---
            CA Objectif | 3,200,000‚Ç¨
            EBITDA Cible | 22%
            Nouveaux Clients | 15
            Expansion G√©o | 2 pays
            """
        }
        
        print(f"\nüìÑ Traitement de {len(test_documents)} documents de test...")
        
        # Vectoriser les documents
        all_chunks = manager.batch_process_documents(test_documents)
        
        print(f"\n‚úÖ Vectorisation termin√©e!")
        print(f"   üìä {len(all_chunks)} chunks cr√©√©s au total")
        
        # Afficher les m√©triques
        print("\n" + "="*50)
        manager.print_metrics()
        
        # Afficher quelques exemples de chunks
        print("\nüìã Exemples de chunks enrichis:")
        print("-" * 40)
        
        for i, chunk in enumerate(all_chunks[:5], 1):
            print(f"\nüîπ Chunk {i}:")
            print(f"   üìÑ Document: {chunk.metadata.nom_document}")
            print(f"   üéØ Th√®me: {chunk.enriched_content.theme_principal}")
            print(f"   üí¨ Guide: {chunk.enriched_content.commentaire_guidage}")
            print(f"   üîó Vectoris√©: {chunk.enriched_content.contenu_enrichi}")
            print(f"   üìè Taille: {chunk.metadata.taille_chunk} chars")
            print(f"   üßÆ Embedding: {len(chunk.embedding)} dimensions")
            
            # V√©rifier que l'embedding n'est pas vide
            if all(x == 0.0 for x in chunk.embedding[:10]):
                print("   ‚ö†Ô∏è  ATTENTION: Embedding semble vide!")
            else:
                print(f"   ‚úÖ Embedding valide: [{chunk.embedding[0]:.4f}, {chunk.embedding[1]:.4f}, ...]")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la vectorisation: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_search_similarity():
    """Test rapide de recherche par similarit√©"""
    
    print("\n" + "="*50)
    print("üîç Test de recherche par similarit√©")
    
    # Ici on pourrait tester la recherche si on avait une base vectorielle
    # Pour l'instant, on confirme juste que la vectorisation fonctionne
    print("   (Impl√©mentation recherche dans vector_store.py)")

if __name__ == "__main__":
    print("üß™ Test de Vectorisation Rapide - EODEN POC")
    print("   Mode: SANS OCR pour maximum de vitesse")
    print("   Objectif: Tester chunking + enrichissement + embeddings")
    
    success = vectorize_test_documents()
    
    if success:
        test_search_similarity()
        print("\nüéâ Test de vectorisation : R√âUSSI!")
        print("\nüìù Prochaines √©tapes:")
        print("1. Activer l'OCR si n√©cessaire (config/settings.yaml)")
        print("2. Connecter √† Google Drive pour vrais documents")
        print("3. Configurer la base vectorielle (Pinecone/Elasticsearch)")
    else:
        print("\n‚ùå Test √©chou√© - V√©rifiez la configuration")
        
    print("\nüí° Pour d√©sactiver compl√®tement l'OCR:")
    print("   √âditez config/settings.yaml ‚Üí ocr: enabled: false")